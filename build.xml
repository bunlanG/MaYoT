<?xml version="1.0" ?>
<!-- Ant config file for MaYoT -->
<project name="MaYoT" default="build-app" basedir="." >
    <description>
        MaYoT build file for Ant.
    </description>
<!-- ============================= Properties ============================== -->
    <property name="project.name" value="MaYoT" />
    <property name="project.main.app" value="com.bunlang.mayot.Main" />
    <property name="project.dir.src.app" value="src" />
    <property name="project.dir.src.test.ui" value="test/ui" />
    <property name="project.dir.src.test" value="test/unit" />
    <property name="project.dir.build" value="build" />
    <property name="project.dir.build.app" value="build/prod" />
    <property name="project.dir.build.javadoc" value="build/jdoc" />
    <property name="project.dir.build.test" value="build/test/unit" />
    <property name="project.dir.build.test.ui" value="build/test/ui" />
    <property name="project.dir.log" value="log" />
    <property name="project.dir.log.test" value="log/test-unit" />
    <property name="project.dir.log.test.ui" value="log/test-ui" />
    <property name="ant.build.javac.target" value="1.7" />
    <property name="ant.build.javac.source" value="1.7" />

<!-- ============================= Classpaths ============================== -->
    <path id="JUnit.classpath">
        <pathelement location="lib/junit4.jar" />
        <pathelement location="lib/hamcrest-all.jar" />
    </path>
    <path id="Log4J.classpath">
        <pathelement location="lib/log4j-1.2.jar" />
    </path>
    <path id="project.prop.classpath">
        <pathelement location="prop" />
    </path>
    <path id="project.app.classpath">
        <pathelement location="${project.dir.build.app}" />
        <path refid="JUnit.classpath" />
        <path refid="Log4J.classpath" />
        <path refid="project.prop.classpath" />
    </path>
    <path id="project.unitTest.classpath">
        <pathelement location="${project.dir.build.app}" />
        <pathelement location="${project.dir.build.test}" />
        <path refid="JUnit.classpath" />
        <path refid="Log4J.classpath" />
        <path refid="project.prop.classpath" />
    </path>
    <path id="project.uiTest.classpath">
        <pathelement location="${project.dir.build.app}" />
        <pathelement location="${project.dir.build.test.ui}" />
        <path refid="JUnit.classpath" />
        <path refid="Log4J.classpath" />
        <path refid="project.prop.classpath" />
    </path>

<!-- =============================== Targets =============================== -->
    <target name="help"
            description="Show this help.">
        <java classname="org.apache.tools.ant.Main">
            <arg value="-projecthelp" />
        </java>
    </target>
<!-- ....................................................................... -->
    <target name="init"
            description="Create folders for generated files.">
        <mkdir dir="${project.dir.build}" />
          <mkdir dir="build/doc" />
          <mkdir dir="${project.dir.build.javadoc}" />
          <mkdir dir="${project.dir.build.app}" />
          <mkdir dir="build/test" />
            <mkdir dir="${project.dir.build.test.ui}" />
            <mkdir dir="${project.dir.build.test}" />
        <mkdir dir="${project.dir.log}" />
          <mkdir dir="${project.dir.log.test.ui}" />
          <mkdir dir="${project.dir.log.test}" />
    </target>
<!-- ....................................................................... -->
    <target name="build-app" depends="init"
            description="Build the main app.">
        <javac srcdir="${project.dir.src.app}" destdir="${project.dir.build.app}" includeAntRuntime="false">
            <classpath refid="project.app.classpath" />
        </javac>
    </target>
<!-- ....................................................................... -->
    <target name="clean"
            description="Clear ALL generated files.">
        <delete dir="${project.dir.build}" />
        <delete dir="${project.dir.log}" />
    </target>
<!-- ....................................................................... -->
    <target name="build-unit-test" depends="build-app"
            description="Build the unit tests.">
        <javac srcdir="${project.dir.src.test}" destdir="${project.dir.build.test}" includeAntRuntime="false">
            <classpath refid="project.unitTest.classpath" />
        </javac>
    </target>
<!-- ....................................................................... -->
    <target name="build-ui-test" depends="build-app"
            description="Build the UI tests.">
        <javac srcdir="${project.dir.src.test.ui}" destdir="${project.dir.build.test.ui}" includeAntRuntime="false">
            <classpath refid="project.uiTest.classpath" />
        </javac>
    </target>
<!-- ....................................................................... -->
    <target name="run-app" depends="build-app"
            description="Run the main app.">
        <java classname="${project.main.app}" fork="true" failonerror="true">
            <classpath refid="project.app.classpath" />
        </java>
    </target>
<!-- ....................................................................... -->
    <target name="-clear-log-unit-test">
            <!-- Clear log files from the previous unit tests. It avoids conflits in results. -->
        <delete includeemptydirs="true">
            <fileset dir="${project.dir.log.test}" includes="**/*"/>
        </delete>
        <echo>log/test-unit folder clean.</echo>
    </target>
    <target name="-junit-unit-test" depends="build-unit-test">
            <!-- Launch all unit tests. -->
        <junit printsummary="on" showoutput="on" fork="yes" failureproperty="test.unit.failed">
            <classpath refid="project.unitTest.classpath" />
            <batchtest todir="${project.dir.log.test}">
                <fileset dir="${project.dir.src.test}">
                    <include name="**/*Test*.java" />
                </fileset>
                <formatter type="xml" /> <!-- Required for JUnit Report -->
            </batchtest>
        </junit>
    </target>
    <target name="-junitreport-unit">
            <!-- Build HTML files from unit tests, with XML logs from tests. -->
        <junitreport todir="${project.dir.log.test}">
            <fileset dir="${project.dir.log.test}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${project.dir.log.test}" />
        </junitreport>
    </target>
    <!-- -->
    <target name="run-unit-test" depends="init,-clear-log-unit-test,-junit-unit-test,-junitreport-unit"
            description="Run all unit tests.">
        <fail message="Unit Tests FAILED" if="test.unit.failed" />
    </target>
<!-- ....................................................................... -->
    <target name="show-report-unit-test"
            description="Show the unit tests report in Firefox.">
        <exec executable="firefox">
            <arg value="${project.dir.log.test}/index.html" />
        </exec>
    </target>
<!-- ....................................................................... -->
    <target name="-clear-log-ui-test">
            <!-- Clear log files from the previous UI tests. It avoids conflits in results. -->
        <delete includeemptydirs="true">
            <fileset dir="${project.dir.log.test.ui}" includes="**/*"/>
        </delete>
        <echo>log/test-ui folder clean.</echo>
    </target>
    <target name="-choice-ui-test">
            <!-- Choose the UI test class to launch. It needs to be the complete class (with package) -->
        <echo>Availables UI :</echo>
        <echo>    > com.bunlang.mayot.GroupUITest</echo>
        <echo>    > com.bunlang.mayot.ranking.TableUITest</echo>
        <echo>    > com.bunlang.mayot.ranking.TeamUITest</echo>
        <echo>    > com.bunlang.mayot.scores.MatchUITest</echo>
        <echo>    > com.bunlang.mayot.scores.MatchDayUITest</echo>
        <input addProperty="test.Ui.class" />
    </target>
    <target name="-junit-ui-test" depends="build-ui-test">
            <!-- Launch all UI tests. -->
        <junit printsummary="on" showoutput="on" fork="yes" failureproperty="test.ui.failed">
			<classpath refid="project.uiTest.classpath" />
            <test name="${test.Ui.class}" todir="${project.dir.log.test.ui}">
                <formatter type="xml" />
            </test>
        </junit>
    </target>
    <target name="-junitreport-ui">
            <!-- Build HTML files from UI tests, with XML logs from tests. -->
        <junitreport todir="${project.dir.log.test.ui}">
            <fileset dir="${project.dir.log.test.ui}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${project.dir.log.test.ui}" />
        </junitreport>
    </target>
    <!-- -->
	<target name="run-ui-test" depends="init,-clear-log-ui-test,-choice-ui-test,-junit-ui-test,-junitreport-ui"
	        description="Run the UI test. You select before the test class.">
        <fail message="UI Test FAILED" if="test.ui.failed" />
    </target>
<!-- ....................................................................... -->
    <target name="show-report-ui-test"
            description="Show the UI test report in Firefox.">
        <exec executable="firefox">
            <arg value="${project.dir.log.test.ui}/index.html" />
        </exec>
    </target>
<!-- ....................................................................... -->
    <target name="build-javadoc" depends="init"
            description="Build the JavaDoc.">
        <javadoc destdir="${project.dir.build.javadoc}" classpathref="project.unitTest.classpath">
            <fileset dir="${project.dir.src.app}">

            </fileset>
            <fileset dir="test">

            </fileset>
        </javadoc>
    </target>
<!-- ....................................................................... -->
    <target name="build-doc"
            description="Build the Doxygen doc.">
        <exec executable="doxygen">

        </exec>
    </target>
<!-- ....................................................................... -->
    <target name="show-javadoc"
            description="Show the JavaDoc in Firefox.">
        <exec executable="firefox">
            <arg value="${project.dir.build.javadoc}/index.html" />
        </exec>
    </target>
<!-- ....................................................................... -->
    <target name="show-doc"
            description="Show the Doxygen doc in Firefox.">
        <exec executable="firefox">
            <arg value="build/doc/html/index.html" />
        </exec>
    </target>
<!-- ....................................................................... -->
</project>
